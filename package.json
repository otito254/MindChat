{
  "name": "mindchat",
  "version": "1.0.0",
  "description": "Mental health support app for LMICs - Low-data peer support & CBT micro-sessions",
  "main": "api/server.js",
  "scripts": {
    "dev": "concurrently \"npm run dev:api\" \"npm run dev:client\"",
    "dev:api": "nodemon api/server.js",
    "dev:client": "http-server public -p 3000 -c-1 --cors",
    "start": "node api/server.js",
    "build": "npm run build:client && npm run build:api",
    "build:client": "node scripts/build-client.js",
    "build:api": "node scripts/build-api.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:api": "jest --testPathPattern=tests/api",
    "test:e2e": "playwright test",
    "test:e2e:mobile": "playwright test --project=mobile",
    "test:lighthouse": "lighthouse http://localhost:3000 --output json --output-path ./reports/lighthouse.json",
    "test:a11y": "axe-core http://localhost:3000",
    "test:security": "audit-ci --config .auditrc",
    "lint": "eslint . --ext .js,.json",
    "lint:fix": "eslint . --ext .js,.json --fix",
    "format": "prettier --write .",
    "compress:audio": "node scripts/compress-audio.js",
    "generate:icons": "node scripts/generate-icons.js",
    "deploy:vercel": "vercel --prod",
    "deploy:netlify": "netlify deploy --prod --dir=public",
    "docker:build": "docker build -t mindchat:latest .",
    "docker:run": "docker run -p 3000:3000 mindchat:latest",
    "docker:compose": "docker-compose up -d",
    "analyze:bundle": "bundlesize",
    "analyze:deps": "depcheck"
  },
  "keywords": [
    "mental-health",
    "cbt",
    "peer-support",
    "pwa",
    "offline-first",
    "lmic",
    "crisis-intervention",
    "accessibility"
  ],
  "author": "MindChat Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/mindchat/mindchat.git"
  },
  "bugs": {
    "url": "https://github.com/mindchat/mindchat/issues"
  },
  "homepage": "https://mindchat.org",
  "dependencies": {
    "express": "^4.18.2",
    "cors": "^2.8.5",
    "helmet": "^7.1.0",
    "compression": "^1.7.4",
    "express-rate-limit": "^7.1.5",
    "ws": "^8.14.2",
    "crypto": "^1.0.1"
  },
  "devDependencies": {
    "nodemon": "^3.0.2",
    "concurrently": "^8.2.2",
    "http-server": "^14.1.1",
    "jest": "^29.7.0",
    "supertest": "^6.3.3",
    "@playwright/test": "^1.40.1",
    "eslint": "^8.56.0",
    "prettier": "^3.1.1",
    "lighthouse": "^11.4.0",
    "@axe-core/cli": "^4.8.2",
    "audit-ci": "^6.6.1",
    "bundlesize": "^0.18.1",
    "depcheck": "^1.4.7",
    "imagemin": "^8.0.1",
    "imagemin-webp": "^7.0.0",
    "ffmpeg-static": "^5.2.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "browserslist": [
    "last 2 versions",
    "not dead",
    "> 0.5%",
    "Android >= 4.4",
    "iOS >= 10"
  ],
  "bundlesize": [
    {
      "path": "public/index.html",
      "maxSize": "100kb",
      "compression": "gzip"
    },
    {
      "path": "public/sw.js",
      "maxSize": "50kb",
      "compression": "gzip"
    }
  ],
  "jest": {
    "testEnvironment": "node",
    "collectCoverageFrom": [
      "api/**/*.js",
      "public/**/*.js",
      "!public/sw.js",
      "!**/node_modules/**"
    ],
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    },
    "setupFilesAfterEnv": [
      "<rootDir>/tests/setup.js"
    ]
  },
  "eslintConfig": {
    "env": {
      "browser": true,
      "node": true,
      "es2021": true,
      "jest": true
    },
    "extends": [
      "eslint:recommended"
    ],
    "parserOptions": {
      "ecmaVersion": 2021,
      "sourceType": "module"
    },
    "rules": {
      "no-console": "warn",
      "no-debugger": "error",
      "no-unused-vars": "error",
      "prefer-const": "error",
      "no-var": "error"
    }
  },
  "prettier": {
    "semi": true,
    "trailingComma": "es5",
    "singleQuote": true,
    "printWidth": 80,
    "tabWidth": 2,
    "useTabs": false
  },
  "pwa": {
    "name": "MindChat",
    "short_name": "MindChat",
    "description": "Mental health support for everyone",
    "theme_color": "#4A90E2",
    "background_color": "#FFFFFF",
    "display": "standalone",
    "scope": "/",
    "start_url": "/"
  },
  "vercel": {
    "version": 2,
    "builds": [
      {
        "src": "api/server.js",
        "use": "@vercel/node"
      },
      {
        "src": "public/**/*",
        "use": "@vercel/static"
      }
    ],
    "routes": [
      {
        "src": "/api/(.*)",
        "dest": "/api/server.js"
      },
      {
        "src": "/(.*)",
        "dest": "/public/$1"
      }
    ],
    "headers": [
      {
        "source": "/(.*)",
        "headers": [
          {
            "key": "X-Content-Type-Options",
            "value": "nosniff"
          },
          {
            "key": "X-Frame-Options",
            "value": "DENY"
          },
          {
            "key": "X-XSS-Protection",
            "value": "1; mode=block"
          }
        ]
      },
      {
        "source": "/audio/(.*)",
        "headers": [
          {
            "key": "Cache-Control",
            "value": "public, max-age=31536000, immutable"
          },
          {
            "key": "Accept-Ranges",
            "value": "bytes"
          }
        ]
      }
    ]
  },
  "netlify": {
    "build": {
      "publish": "public"
    },
    "functions": {
      "directory": "netlify/functions"
    },
    "redirects": [
      {
        "from": "/api/*",
        "to": "/.netlify/functions/api/:splat",
        "status": 200
      }
    ],
    "headers": [
      {
        "for": "/*",
        "values": {
          "X-Frame-Options": "DENY",
          "X-XSS-Protection": "1; mode=block",
          "X-Content-Type-Options": "nosniff"
        }
      },
      {
        "for": "/audio/*",
        "values": {
          "Cache-Control": "public, max-age=31536000, immutable",
          "Accept-Ranges": "bytes"
        }
      }
    ]
  },
  "docker": {
    "baseImage": "node:18-alpine",
    "workdir": "/app",
    "expose": 3000,
    "healthcheck": {
      "test": "curl -f http://localhost:3000/health || exit 1",
      "interval": "30s",
      "timeout": "10s",
      "retries": 3
    }
  }
}